name: Package

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  HELM_REPO: haimgel/helm-charts

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # # To be able to get OIDC ID token to sign images.
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f #v5.8.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef #v3.6.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #v3.6.0
        with:
          platforms: arm64

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3.11.1
        with:
          version: latest # Need at least 0.12.0 for annotations

      - id: build-and-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ github.event_name != 'pull_request' && steps.meta.outputs.annotations || '' }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=min
          provenance: ${{ github.event_name != 'pull_request' && 'mode=max' || 'false' }}
          sbom: ${{ github.event_name != 'pull_request' }}

      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 #v3.10.0
        if: startsWith(github.ref, 'refs/tags/')

      - name: Sign the published container image
        if: startsWith(github.ref, 'refs/tags/')
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST} \
            -a sha=${{ github.sha }} \
            -a run_id=${{ github.run_id }} \
            -a run_attempt=${{ github.run_attempt }}

      - uses: azure/setup-helm@1a275c3b69536ee54be43f2070a358922e12c8d4 #v4.3.1
        with:
          version: v3.12.2

      - name: Test Helm chart
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          helm lint helm/kan-brewer
          helm package helm/kan-brewer --version 0.99.99 --app-version 0.99.99

      - name: Release Helm chart
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          helm lint helm/kan-brewer
          helm package helm/kan-brewer --version ${{ env.DOCKER_METADATA_OUTPUT_VERSION }} --app-version ${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.REGISTRY }} --username ${{ github.repository_owner }} --password-stdin
          helm push kan-brewer-${{ env.DOCKER_METADATA_OUTPUT_VERSION }}.tgz oci://${{ env.REGISTRY }}/${{ env.HELM_REPO }}
